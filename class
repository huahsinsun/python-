python知识-Class练习项目部分

A.基础部分
1. 基本类定义与实例化
任务：

创建一个名为 Person 的类。
这个类有属性 name 和 age。
为这个类编写一个方法 introduce，输出 My name is <name> and I am <age> years old.。
实例化几个 Person 对象并调用 introduce 方法。
2. 类的继承
任务：

基于 Person 类，创建一个子类 Student。
Student 类增加一个属性 student_id。
覆盖 introduce 方法，使其输出 My name is <name>, I am <age> years old, and my student ID is <student_id>.。
实例化几个 Student 对象并调用 introduce 方法。
3. 成员可见性
任务：

修改 Person 类，使其有一个受保护属性 _address。
添加一个公有方法 set_address 用于设置 _address，以及一个公有方法 get_address 用于获取 _address。
实例化一个 Person 对象，设置并获取其 _address。
4. 使用私有成员
任务：

修改 Student 类，使其有一个私有属性 __gpa。
添加一个公有方法 set_gpa 和 get_gpa 用于设置和获取 __gpa。
实例化一个 Student 对象，设置并获取其 __gpa。
5. 高级练习：综合运用
任务：

创建一个名为 Course 的类，包含属性 course_name 和 students（一个学生列表）。
Course 类有一个方法 add_student，用于将 Student 对象添加到 students 列表中。
Course 类有一个方法 get_average_gpa，计算并返回所有学生的平均 GPA。
创建几个 Student 对象并将它们添加到一个 Course 对象中，最后计算并打印平均 GPA。

B.高级部分
高级项目练习题
1. 内部调用函数
任务：

创建一个名为 Calculator 的类。
这个类有一个方法 add，接受两个参数并返回它们的和。
这个类有一个方法 subtract，接受两个参数并返回它们的差。
这个类有一个方法 multiply，接受两个参数并返回它们的积。
这个类有一个方法 divide，接受两个参数并返回它们的商。
这个类有一个方法 calculate，接受两个参数和一个操作符（如 +, -, *, /），根据操作符调用相应的方法并返回结果。
2. 继承与方法重载
任务：

创建一个名为 Shape 的基类。
这个类有一个方法 area，返回 0。
创建一个名为 Rectangle 的子类，继承自 Shape。
Rectangle 类有属性 width 和 height。
覆盖 area 方法，返回矩形的面积（width * height）。
创建一个名为 Circle 的子类，继承自 Shape。
Circle 类有属性 radius。
覆盖 area 方法，返回圆的面积（π * radius^2）。
3. 组合和内部调用
任务：

创建一个名为 Book 的类。
这个类有属性 title 和 author。
创建一个名为 Library 的类。
这个类有一个属性 books，是一个 Book 对象的列表。
这个类有一个方法 add_book，接受一个 Book 对象并将其添加到 books 列表中。
这个类有一个方法 find_book_by_title，接受一个书名并返回书名匹配的 Book 对象。
4. 高级练习：多重继承与MRO（方法解析顺序）
任务：

创建一个基类 A，有一个方法 greet，打印 "Hello from A"。
创建一个基类 B，有一个方法 greet，打印 "Hello from B"。
创建一个类 C，继承自 A 和 B，并覆盖 greet 方法，调用基类 A 和 B 的 greet 方法，然后打印 "Hello from C"。
实例化 C 类并调用 greet 方法，观察输出结果。

C.综合部分
结合异常处理、列表、字典、元组、集合等Python数据结构来设计一些项目练习题.

高级项目练习题
1. 异常处理与列表操作
任务：

创建一个名为 ListProcessor 的类。
这个类有一个方法 add_to_list，接受一个列表和一个元素，将元素添加到列表中。
这个类有一个方法 remove_from_list，接受一个列表和一个元素，如果元素在列表中则将其移除，否则抛出 ValueError 异常。
这个类有一个方法 get_element，接受一个列表和一个索引，如果索引有效则返回对应的元素，否则抛出 IndexError 异常。
2. 字典操作与异常处理
任务：

创建一个名为 DictProcessor 的类。
这个类有一个方法 add_to_dict，接受一个字典、一个键和一个值，将键值对添加到字典中。
这个类有一个方法 remove_from_dict，接受一个字典和一个键，如果键在字典中则将其移除，否则抛出 KeyError 异常。
这个类有一个方法 get_value，接受一个字典和一个键，如果键在字典中则返回对应的值，否则抛出 KeyError 异常。
3. 元组与集合操作
任务：

创建一个名为 TupleSetProcessor 的类。
这个类有一个方法 create_tuple，接受任意数量的参数并返回一个包含这些参数的元组。
这个类有一个方法 create_set，接受一个列表并返回一个包含列表所有元素的集合。
这个类有一个方法 union_sets，接受两个集合并返回它们的并集。
这个类有一个方法 intersection_sets，接受两个集合并返回它们的交集。
4. 综合练习：多数据结构与异常处理
任务：

创建一个名为 DataProcessor 的类。
这个类有一个方法 process_data，接受一个包含多种数据结构（如列表、字典、元组、集合）的字典，并根据不同的数据结构进行不同的处理：
对于列表，计算其长度并返回。
对于字典，返回所有键的列表。
对于元组，返回其包含的所有元素。
对于集合，返回其所有元素的总和。
在 process_data 方法中，处理可能发生的异常，如 TypeError 和 KeyError。
